<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <name>Create_Email_Draft</name>
        <label>Create Email Draft</label>
        <locationX>182</locationX>
        <locationY>1190</locationY>
        <actionName>SC_GeminiEmailResponseInvocable</actionName>
        <actionType>apex</actionType>
        <connector>
            <targetReference>showToast</targetReference>
        </connector>
        <flowTransactionModel>Automatic</flowTransactionModel>
        <inputParameters>
            <name>caseId</name>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailAddress</name>
            <value>
                <stringValue>contact@magasins-u.com</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>geminiResponse</name>
            <value>
                <elementReference>Get_Gemini_Response.geminiResponse</elementReference>
            </value>
        </inputParameters>
        <nameSegment>SC_GeminiEmailResponseInvocable</nameSegment>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </actionCalls>
    <actionCalls>
        <name>Get_Gemini_Response</name>
        <label>Get Gemini Response</label>
        <locationX>182</locationX>
        <locationY>674</locationY>
        <actionName>SC_GeminiResponseInvocable</actionName>
        <actionType>apex</actionType>
        <connector>
            <targetReference>Get_Email_Message_Drafts</targetReference>
        </connector>
        <faultConnector>
            <targetReference>showToast_Action_2</targetReference>
        </faultConnector>
        <flowTransactionModel>Automatic</flowTransactionModel>
        <inputParameters>
            <name>prompt</name>
            <value>
                <elementReference>geminiRequestPrompt</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>userHint</name>
            <value>
                <elementReference>geminiRequestUserHint</elementReference>
            </value>
        </inputParameters>
        <nameSegment>SC_GeminiResponseInvocable</nameSegment>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </actionCalls>
    <actionCalls>
        <name>showToast</name>
        <label>showToast</label>
        <locationX>182</locationX>
        <locationY>1298</locationY>
        <actionName>c:showToast</actionName>
        <actionType>component</actionType>
        <connector>
            <targetReference>Test_Screen_Pop</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>type</name>
            <value>
                <elementReference>SuccesType</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>message</name>
            <value>
                <stringValue>La réponse de l&apos;IA a été générée directement dans votre brouillon email, ouvrez-le pour le vérifier/modifier et l&apos;envoyer</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>duration</name>
            <value>
                <stringValue>5</stringValue>
            </value>
        </inputParameters>
        <nameSegment>c:showToast</nameSegment>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </actionCalls>
    <actionCalls>
        <name>showToast_Action_2</name>
        <label>showToast Action 2</label>
        <locationX>490</locationX>
        <locationY>782</locationY>
        <actionName>c:showToast</actionName>
        <actionType>component</actionType>
        <connector>
            <targetReference>varErrorMessage</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>type</name>
            <value>
                <stringValue>error</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>message</name>
            <value>
                <elementReference>flowErrorMessage</elementReference>
            </value>
        </inputParameters>
        <nameSegment>c:showToast</nameSegment>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </actionCalls>
    <actionCalls>
        <name>Test_Screen_Pop</name>
        <label>Test Screen Pop</label>
        <locationX>182</locationX>
        <locationY>1406</locationY>
        <actionName>addScreenPop</actionName>
        <actionType>addScreenPop</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>screenPop</name>
            <value>
                <stringValue>[{&quot;id&quot;:&quot;ef35dd50&quot;,&quot;targetObjectId&quot;:&quot;5000Q00000Ie7lWQAR&quot;,&quot;isFocused&quot;:false}]</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>pendingServiceRoutingInteractionInfoInputList</name>
        </inputParameters>
        <nameSegment>addScreenPop</nameSegment>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </actionCalls>
    <apiVersion>63.0</apiVersion>
    <areMetricsLoggedToDataCloud>false</areMetricsLoggedToDataCloud>
    <assignments>
        <name>Set_Prompt_with_case_data</name>
        <label>Set Prompt with case data</label>
        <locationX>182</locationX>
        <locationY>566</locationY>
        <assignmentItems>
            <assignToReference>geminiRequestPrompt</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_Case_Description.Description</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>geminiRequestUserHint</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>TXT01_Gemini_Hint</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Get_Gemini_Response</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>Check_if_we_show_the_screen_flow</name>
        <label>Check if we show the screen flow</label>
        <locationX>468</locationX>
        <locationY>242</locationY>
        <defaultConnector>
            <targetReference>G_n_rateur_de_r_ponses_automatique_par_Gemini</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>No_email_sent</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Email_Messages</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>SCR01_Generate_Gemini_Email</targetReference>
            </connector>
            <label>No email sent</label>
        </rules>
    </decisions>
    <decisions>
        <name>Draft_Found</name>
        <label>Draft Found</label>
        <locationX>182</locationX>
        <locationY>890</locationY>
        <defaultConnector>
            <targetReference>Create_Email_Draft</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Résultat par défaut</defaultConnectorLabel>
        <rules>
            <name>Email_Message_Drafts_Found</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Email_Message_Drafts</leftValueReference>
                <operator>IsBlank</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Delete_Draft_Email</targetReference>
            </connector>
            <label>Email Message Drafts Found</label>
        </rules>
    </decisions>
    <environments>Default</environments>
    <formulas>
        <name>testerr</name>
        <dataType>String</dataType>
        <expression>&quot;testAn Apex error occurred: System.JSONException: Unexpected character ((code 60)): expected a valid value (number, String, array, object, &apos;true&apos;, &apos;false&apos; or &apos;null&apos;) at input location [1,2] TEST3&quot;</expression>
    </formulas>
    <interviewLabel>FL001_Gemini_UserInterface {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Générer réponse avec l&apos;IA</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>Flow</processType>
    <recordDeletes>
        <name>Delete_Draft_Email</name>
        <label>Delete Draft Email</label>
        <locationX>50</locationX>
        <locationY>998</locationY>
        <connector>
            <targetReference>Create_Email_Draft</targetReference>
        </connector>
        <inputReference>Get_Email_Message_Drafts</inputReference>
    </recordDeletes>
    <recordLookups>
        <name>Get_Case_Description</name>
        <label>Get Case Description</label>
        <locationX>182</locationX>
        <locationY>458</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Set_Prompt_with_case_data</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Case</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Email_Message_Drafts</name>
        <label>Get Email Message Drafts</label>
        <locationX>182</locationX>
        <locationY>782</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Draft_Found</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>CreatedById</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$User.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>ParentId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </filters>
        <filters>
            <field>Status</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>5</stringValue>
            </value>
        </filters>
        <filters>
            <field>RelatedToId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>EmailMessage</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Email_Messages</name>
        <label>Get Email Messages</label>
        <locationX>468</locationX>
        <locationY>134</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Check_if_we_show_the_screen_flow</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>ParentId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>EmailMessage</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <screens>
        <name>G_n_rateur_de_r_ponses_automatique_par_Gemini</name>
        <label>Générateur de réponses automatique par Gemini</label>
        <locationX>754</locationX>
        <locationY>350</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <fields>
            <name>NoEmailToGenerate</name>
            <fieldText>&lt;p&gt;&lt;span style=&quot;color: rgb(68, 68, 68); background-color: rgb(255, 255, 255);&quot;&gt;Un e-mail est déjà relié à ce case.&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>false</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <description>Screen to allow user to put some hints for gemini response</description>
        <name>SCR01_Generate_Gemini_Email</name>
        <label>Générateur de réponses automatique par Gemini</label>
        <locationX>182</locationX>
        <locationY>350</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <connector>
            <targetReference>Get_Case_Description</targetReference>
        </connector>
        <fields>
            <name>TXT01_Gemini_Hint</name>
            <dataType>String</dataType>
            <fieldText>Indications supplémentaires pour Gemini</fieldText>
            <fieldType>InputField</fieldType>
            <helpText>&lt;p&gt;Renseignez des indications pour améliorer la génération du prompt Gemini.&lt;/p&gt;</helpText>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>false</isRequired>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>varErrorMessage</name>
        <label>varErrorMessage</label>
        <locationX>490</locationX>
        <locationY>890</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <fields>
            <name>errorMessage</name>
            <fieldText>&lt;p&gt;&lt;strong style=&quot;color: rgb(255, 0, 0);&quot;&gt;Erreur lors de la géneration de la reponse&lt;/strong&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <start>
        <locationX>342</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Get_Email_Messages</targetReference>
        </connector>
    </start>
    <status>Active</status>
    <textTemplates>
        <name>succesEmailGenerated</name>
        <isViewedAsPlainText>false</isViewedAsPlainText>
        <text>&lt;p&gt;Email has been generated by AI&lt;/p&gt;</text>
    </textTemplates>
    <variables>
        <name>flowErrorMessage</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <elementReference>$Flow.FaultMessage</elementReference>
        </value>
    </variables>
    <variables>
        <name>geminiRequestPrompt</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>geminiRequestUserHint</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>recordId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>SuccesType</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <value>
            <stringValue>success</stringValue>
        </value>
    </variables>
</Flow>
